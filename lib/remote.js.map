{"version":3,"sources":["../src/remote.js"],"names":["fetchRemote","name","remoteURL","console","warn","remote","protocol","hostname","host","test","branch","url","repo","replace","path","projectUrl","owner"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;SAEsBA,W;;;;;;;0BAAf,iBAA4BC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmB,kDAA+BA,IAA/B,UADnB;;AAAA;AACCC,YAAAA,SADD;;AAAA,gBAEAA,SAFA;AAAA;AAAA;AAAA;;AAGHC,YAAAA,OAAO,CAACC,IAAR,+BAAoCH,IAApC;AACAE,YAAAA,OAAO,CAACC,IAAR;AAJG,6CAKI,IALJ;;AAAA;AAOCC,YAAAA,MAPD,GAOU,gCAAaH,SAAb,CAPV;AAQCI,YAAAA,QARD,GAQYD,MAAM,CAACC,QAAP,KAAoB,OAApB,GAA8B,OAA9B,GAAwC,QARpD;AASCC,YAAAA,QATD,GASYF,MAAM,CAACE,QAAP,IAAmBF,MAAM,CAACG,IATtC;;AAAA,kBAWD,SAASC,IAAT,CAAcF,QAAd,KAA2B,SAASE,IAAT,CAAcJ,MAAM,CAACK,MAArB,CAX1B;AAAA;AAAA;AAAA;;AAAA,6CAaI;AACLH,cAAAA,QAAQ,EAARA,QADK;AAELI,cAAAA,GAAG,YAAKL,QAAL,eAAkBC,QAAlB,cAA8BF,MAAM,CAACO,IAArC,cAA6CP,MAAM,CAACK,MAAP,CAAcG,OAAd,CAAsB,QAAtB,EAAgC,EAAhC,CAA7C;AAFE,aAbJ;;AAAA;AAAA,iBAmBD,aAAaJ,IAAb,CAAkBF,QAAlB,CAnBC;AAAA;AAAA;AAAA;;AAAA,6CAoBI;AACLA,cAAAA,QAAQ,EAARA,QADK;AAELI,cAAAA,GAAG,YAAKL,QAAL,eAAkBC,QAAlB,cAA8BF,MAAM,CAACS,IAArC,CAFE;AAGLC,cAAAA,UAAU,YAAKT,QAAL,eAAkBC,QAAlB,cAA8BF,MAAM,CAACO,IAArC;AAHL,aApBJ;;AAAA;AAAA,iBA2BD,eAAeH,IAAf,CAAoBF,QAApB,CA3BC;AAAA;AAAA;AAAA;;AAAA,6CA4BI;AACLA,cAAAA,QAAQ,EAARA,QADK;AAELI,cAAAA,GAAG,YAAKL,QAAL,eAAkBC,QAAlB,cAA8BF,MAAM,CAACO,IAArC,cAA6CP,MAAM,CAACK,MAApD,CAFE;AAGLK,cAAAA,UAAU,YAAKT,QAAL,eAAkBC,QAAlB,cAA8BF,MAAM,CAACW,KAArC;AAHL,aA5BJ;;AAAA;AAAA,6CAmCE;AACLT,cAAAA,QAAQ,EAARA,QADK;AAELI,cAAAA,GAAG,YAAKL,QAAL,eAAkBC,QAAlB,cAA8BF,MAAM,CAACO,IAArC;AAFE,aAnCF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import parseRepoURL from 'parse-github-url'\nimport { cmd } from './utils'\n\nexport async function fetchRemote (name) {\n  const remoteURL = await cmd(`git config --get remote.${name}.url`)\n  if (!remoteURL) {\n    console.warn(`Warning: Git remote ${name} was not found`)\n    console.warn(`Warning: Changelog will not contain links to commits, issues, or PRs`)\n    return null\n  }\n  const remote = parseRepoURL(remoteURL)\n  const protocol = remote.protocol === 'http:' ? 'http:' : 'https:'\n  const hostname = remote.hostname || remote.host\n\n  if (/gitlab/.test(hostname) && /\\.git$/.test(remote.branch)) {\n    // Support gitlab subgroups\n    return {\n      hostname,\n      url: `${protocol}//${hostname}/${remote.repo}/${remote.branch.replace(/\\.git$/, '')}`\n    }\n  }\n\n  if (/dev\\.azure/.test(hostname)) {\n    return {\n      hostname,\n      url: `${protocol}//${hostname}/${remote.path}`,\n      projectUrl: `${protocol}//${hostname}/${remote.repo}`\n    }\n  }\n\n  if (/visualstudio/.test(hostname)) {\n    return {\n      hostname,\n      url: `${protocol}//${hostname}/${remote.repo}/${remote.branch}`,\n      projectUrl: `${protocol}//${hostname}/${remote.owner}`\n    }\n  }\n\n  return {\n    hostname,\n    url: `${protocol}//${hostname}/${remote.repo}`\n  }\n}\n"],"file":"remote.js"}