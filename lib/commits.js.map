{"version":3,"sources":["../src/commits.js"],"names":["COMMIT_SEPARATOR","MESSAGE_SEPARATOR","MATCH_COMMIT","MATCH_STATS","BODY_FORMAT","FALLBACK_BODY_FORMAT","DEFAULT_FIX_PATTERN","MERGE_PATTERNS","fetchCommits","remote","options","branch","onProgress","command","getLogFormat","format","log","parseCommits","gitVersion","bodyFormat","semver","gte","string","commits","split","slice","map","commit","parseCommit","startingCommit","index","findIndex","c","hash","indexOf","Error","match","refs","date","author","email","tail","message","stats","shorthash","Date","toISOString","tag","getTag","subject","getSubject","trim","fixes","getFixes","merge","getMerge","href","getCommitLink","breaking","breakingPattern","RegExp","test","getStats","ref","prefix","tagPrefix","replace","tagPattern","valid","files","insertions","deletions","parseInt","pattern","getFixPattern","exec","id","getFixID","getIssueLink","issueUrl","push","i","length","issuePattern","getMergePatterns","mergePattern","concat","patterns","getMergeLink","hostname","url","projectUrl"],"mappings":"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","sourcesContent":["import semver from 'semver'\nimport { cmd, isLink, replaceText, getGitVersion } from './utils'\n\nconst COMMIT_SEPARATOR = '__AUTO_CHANGELOG_COMMIT_SEPARATOR__'\nconst MESSAGE_SEPARATOR = '__AUTO_CHANGELOG_MESSAGE_SEPARATOR__'\nconst MATCH_COMMIT = /(.*)\\n(?:\\s\\((.*)\\))?\\n(.*)\\n(.*)\\n(.*)\\n([\\S\\s]+)/\nconst MATCH_STATS = /(\\d+) files? changed(?:, (\\d+) insertions?...)?(?:, (\\d+) deletions?...)?/\nconst BODY_FORMAT = '%B'\nconst FALLBACK_BODY_FORMAT = '%s%n%n%b'\n\n// https://help.github.com/articles/closing-issues-via-commit-messages\nconst DEFAULT_FIX_PATTERN = /(?:close[sd]?|fixe?[sd]?|resolve[sd]?)\\s(?:#(\\d+)|(https?:\\/\\/.+?\\/(?:issues|pull|pull-requests|merge_requests)\\/(\\d+)))/gi\n\nconst MERGE_PATTERNS = [\n  /Merge pull request #(\\d+) from .+\\n\\n(.+)/, // Regular GitHub merge\n  /^(.+) \\(#(\\d+)\\)(?:$|\\n\\n)/, // Github squash merge\n  /Merged in .+ \\(pull request #(\\d+)\\)\\n\\n(.+)/, // BitBucket merge\n  /Merge branch .+ into .+\\n\\n(.+)[\\S\\s]+See merge request [^!]*!(\\d+)/ // GitLab merge\n]\n\nexport async function fetchCommits (remote, options, branch = null, onProgress) {\n  const command = branch ? `git log ${branch}` : 'git log'\n  const format = await getLogFormat()\n  const log = await cmd(`${command} --shortstat --pretty=format:${format}`, onProgress)\n  return parseCommits(log, remote, options)\n}\n\nasync function getLogFormat () {\n  const gitVersion = await getGitVersion()\n  const bodyFormat = gitVersion && semver.gte(gitVersion, '1.7.2') ? BODY_FORMAT : FALLBACK_BODY_FORMAT\n  return `${COMMIT_SEPARATOR}%H%n%d%n%ai%n%an%n%ae%n${bodyFormat}${MESSAGE_SEPARATOR}`\n}\n\nfunction parseCommits (string, remote, options = {}) {\n  const commits = string\n    .split(COMMIT_SEPARATOR)\n    .slice(1)\n    .map(commit => parseCommit(commit, remote, options))\n\n  if (options.startingCommit) {\n    const index = commits.findIndex(c => c.hash.indexOf(options.startingCommit) === 0)\n    if (index === -1) {\n      throw new Error(`Starting commit ${options.startingCommit} was not found`)\n    }\n    return commits.slice(0, index + 1)\n  }\n\n  return commits\n}\n\nfunction parseCommit (commit, remote, options = {}) {\n  const [, hash, refs, date, author, email, tail] = commit.match(MATCH_COMMIT)\n  const [message, stats] = tail.split(MESSAGE_SEPARATOR)\n  return {\n    hash,\n    shorthash: hash.slice(0, 7),\n    author,\n    email,\n    date: new Date(date).toISOString(),\n    tag: getTag(refs, options),\n    subject: replaceText(getSubject(message), options),\n    message: message.trim(),\n    fixes: getFixes(message, author, remote, options),\n    merge: getMerge(message, author, remote, options),\n    href: getCommitLink(hash, remote),\n    breaking: !!options.breakingPattern && new RegExp(options.breakingPattern).test(message),\n    ...getStats(stats.trim())\n  }\n}\n\nfunction getTag (refs, options) {\n  if (!refs) return null\n  for (let ref of refs.split(', ')) {\n    const prefix = `tag: ${options.tagPrefix}`\n    if (ref.indexOf(prefix) === 0) {\n      const tag = ref.replace(prefix, '')\n      if (options.tagPattern) {\n        if (new RegExp(options.tagPattern).test(tag)) {\n          return tag\n        }\n        return null\n      }\n      if (semver.valid(tag)) {\n        return tag\n      }\n    }\n  }\n  return null\n}\n\nfunction getSubject (message) {\n  if (!message) {\n    return '_No commit message_'\n  }\n  return message.match(/[^\\n]+/)[0]\n}\n\nfunction getStats (stats) {\n  if (!stats) return {}\n  const [, files, insertions, deletions] = stats.match(MATCH_STATS)\n  return {\n    files: parseInt(files || 0),\n    insertions: parseInt(insertions || 0),\n    deletions: parseInt(deletions || 0)\n  }\n}\n\nfunction getFixes (message, author, remote, options = {}) {\n  const pattern = getFixPattern(options)\n  let fixes = []\n  let match = pattern.exec(message)\n  if (!match) return null\n  while (match) {\n    const id = getFixID(match)\n    const href = getIssueLink(match, id, remote, options.issueUrl)\n    fixes.push({ id, href, author })\n    match = pattern.exec(message)\n  }\n  return fixes\n}\n\nfunction getFixID (match) {\n  // Get the last non-falsey value in the match array\n  for (let i = match.length; i >= 0; i--) {\n    if (match[i]) {\n      return match[i]\n    }\n  }\n}\n\nfunction getFixPattern (options) {\n  if (options.issuePattern) {\n    return new RegExp(options.issuePattern, 'g')\n  }\n  return DEFAULT_FIX_PATTERN\n}\n\nfunction getMergePatterns (options) {\n  if (options.mergePattern) {\n    return MERGE_PATTERNS.concat(new RegExp(options.mergePattern, 'g'))\n  }\n  return MERGE_PATTERNS\n}\n\nfunction getMerge (message, author, remote, options = {}) {\n  const patterns = getMergePatterns(options)\n  for (let pattern of patterns) {\n    const match = pattern.exec(message)\n    if (match) {\n      const id = /^\\d+$/.test(match[1]) ? match[1] : match[2]\n      const message = /^\\d+$/.test(match[1]) ? match[2] : match[1]\n      return {\n        id,\n        message: replaceText(message, options),\n        href: getMergeLink(id, remote),\n        author\n      }\n    }\n  }\n  return null\n}\n\nfunction getCommitLink (hash, remote) {\n  if (!remote) {\n    return null\n  }\n  if (/bitbucket/.test(remote.hostname)) {\n    return `${remote.url}/commits/${hash}`\n  }\n  return `${remote.url}/commit/${hash}`\n}\n\nfunction getIssueLink (match, id, remote, issueUrl) {\n  if (!remote) {\n    return null\n  }\n  if (isLink(match[2])) {\n    return match[2]\n  }\n  if (issueUrl) {\n    return issueUrl.replace('{id}', id)\n  }\n  if (/dev\\.azure/.test(remote.hostname) || /visualstudio/.test(remote.hostname)) {\n    return `${remote.projectUrl}/_workitems/edit/${id}`\n  }\n  return `${remote.url}/issues/${id}`\n}\n\nfunction getMergeLink (id, remote) {\n  if (!remote) {\n    return null\n  }\n  if (/bitbucket/.test(remote.hostname)) {\n    return `${remote.url}/pull-requests/${id}`\n  }\n  if (/gitlab/.test(remote.hostname)) {\n    return `${remote.url}/merge_requests/${id}`\n  }\n  if (/dev\\.azure/.test(remote.hostname) || /visualstudio/.test(remote.hostname)) {\n    return `${remote.url}/pullrequest/${id}`\n  }\n  return `${remote.url}/pull/${id}`\n}\n"],"file":"commits.js"}